################################################################################
#
# Makefile to compile and link C programs with MPI subroutines
#
# Version valid for Linux machines with MPICH
#
# "make" compiles and links the specified main programs and modules,
# using the specified libraries (if any), and produces the executables
#
# "make clean" removes all files generated by "make"
#
# Dependencies on included files are automatically taken care of
#
################################################################################

all: rmxeq mkdep mkxeq
.PHONY: all


# main programs and modules to be compiled

MAIN = check1 check2 check3 check4 check5

ARCHIVE = archive

BLOCK = block blk_grid map_u2blk map_sw2blk map_s2blk

DFL = dfl_geometry

DFT = dft4d dft_com dft_shuf fft small_dft

DIRAC = Dw_dble Dw Dw_bnd

FLAGS = flags action_parms dfl_parms dirac_parms force_parms hmc_parms \
        lat_parms mdint_parms rat_parms sap_parms solver_parms \
        dft4d_parms dft_parms

HFLDS = hflds

LATTICE = bcnds uidx ftidx geometry cstar

LINALG = salg salg_dble valg valg_dble liealg cmatrix_dble cmatrix dalg

LINSOLV = cgne fgcr fgcr4vd mscg

MDFLDS = mdflds su3fcom u1fcom md_cstar u1mom_map u1mom_facc

RANDOM = ranlux ranlxs ranlxd gauss

RATFCTS = elliptic zolotarev ratfcts

SAP = sap_com sap_gcr sap blk_solv

SFLDS = sflds scom sdcom Pbnd Pbnd_dble

SU3FCTS = chexp su3prod su3ren cm3x3 random_su3

SW_TERM = pauli pauli_dble swflds sw_term

TCHARGE = ftcom ftensor

UFLDS = plaq_sum uflds udcom bstap ud_cstar

UTILS = endian error hsum ioutils mutils utils wspace

U1FLDS = adflds adcom u1flds ad_shift u1_plaq_sum u1fcts u1_bstap ad_bcnds\
         ad_cstar

U1FTENSOR = u1ftcom u1ftensor u1fluxes mxw_action

VFLDS = vflds vinit vcom vdcom

SHARE = mdflds_utils


MODULES = $(ARCHIVE) $(BLOCK) $(DFL) $(DIRAC) $(FLAGS) \
          $(LATTICE) $(LINALG) $(LINSOLV) $(MDFLDS) $(RANDOM) \
          $(RATFCTS) $(SAP) $(SFLDS) $(SU3FCTS) $(SW_TERM) $(TCHARGE) \
          $(UFLDS) $(UTILS) $(U1FLDS) $(U1FTENSOR) $(VFLDS) \
	  $(HFLDS) $(SHARE) $(DFT)


# Logging option (-mpilog or -mpitrace or -mpianim)

LOGOPTION =


# search path for modules

MDIR = ../../modules

SHDIR = ../../devel/share

VPATH = .:$(MDIR)/flags:$(MDIR)/lattice:$(MDIR)/archive:$(MDIR)/linalg:\
          $(MDIR)/random:$(MDIR)/uflds:$(MDIR)/mdflds:$(MDIR)/su3fcts:\
          $(MDIR)/utils:$(MDIR)/sflds:$(MDIR)/dirac:\
          $(MDIR)/sw_term:$(MDIR)/tcharge:$(MDIR)/block:$(MDIR)/sap:\
          $(MDIR)/linsolv:$(MDIR)/dfl:$(MDIR)/vflds:\
          $(MDIR)/ratfcts:$(MDIR)/u1flds:$(MDIR)/u1ftensor:\
          $(MDIR)/hflds:$(MDIR)/dft:$(SHDIR)


# additional include directories

INCPATH = $(MPI_INCLUDE) ../../include $(SHDIR)


# additional libraries

LIBS = m

LIBPATH = $(MPI_HOME)/lib


# scheduling and optimization options

CFLAGS = -std=c89 -pedantic -fstrict-aliasing \
         -Wall -Wno-long-long -Wstrict-prototypes -Werror \
         #-O -mno-avx -Dx64 -DPM

LFLAGS =


############################## do not change ###################################

SHELL=/bin/bash
CC=mpicc
CLINKER=$(CC)

PGMS= $(MAIN) $(MODULES)

-include $(addsuffix .d,$(PGMS))


# rule to make dependencies

$(addsuffix .d,$(PGMS)): %.d: %.c Makefile
	@ $(GCC) -ansi $< -MM $(addprefix -I,$(INCPATH)) -o $@


# rule to compile source programs

$(addsuffix .o,$(PGMS)): %.o: %.c Makefile
	$(CC) $< -c $(CFLAGS) $(LOGOPTION) $(addprefix -I,$(INCPATH))


# rule to link object files

$(MAIN): %: %.o $(addsuffix .o,$(MODULES)) Makefile
	$(CLINKER) $< $(addsuffix .o,$(MODULES)) $(LFLAGS) $(LOGOPTION) \
        $(addprefix -L,$(LIBPATH)) $(addprefix -l,$(LIBS)) -o $@


# produce executables

mkxeq: $(MAIN)


# remove old executables

rmxeq:
	@ -rm -f $(MAIN); \
        echo "delete old executables"


# make dependencies

mkdep:  $(addsuffix .d,$(PGMS))
	@ echo "generate tables of dependencies"


# clean directory

clean:
	@ -rm -rf *.d *.o *.alog *.clog *.slog $(MAIN)
.PHONY: clean

################################################################################
